{"ast":null,"code":"/*import React, { useContext } from 'react';\r\nimport { CartContext } from '../CartContext';\r\nimport './Cart.css';\r\nimport closeIcon from '../Components/Assets/close.png';\r\n\r\nconst Cart = () => {\r\n  const { cart, cartCount, removeItem } = useContext(CartContext);\r\n\r\n  const addToCart = async (item) => {\r\n    try {\r\n      // Get the token from localStorage\r\n      const authToken = localStorage.getItem('auth_token');\r\n\r\n      if (!authToken) {\r\n        console.error('No auth token found. Please log in.');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('http://localhost:4000/addtocart', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': authToken,\r\n        },\r\n        body: JSON.stringify({ item }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        console.log('Item added to cart:', data);\r\n        // Optionally update cart state/context here\r\n      } else {\r\n        console.error('Failed to add item:', data.errors || data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding item:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <h1>Shopping Cart</h1>\r\n      <h2>Total Items: {cartCount}</h2>\r\n\r\n      <div className=\"cart-items\">\r\n        {cart.length > 0 ? (\r\n          cart.map((item) => (\r\n            <div key={item.id} className=\"cart-item\">\r\n              <img\r\n                src={item.image}\r\n                alt={item.name}\r\n                className=\"cart-item-image\"\r\n              />\r\n              <div className=\"cart-item-details\">\r\n                <p className=\"cart-item-name\">{item.name}</p>\r\n                <p className=\"cart-item-price\">Price: ${item.new_price}</p>\r\n              </div>\r\n              <button\r\n                className=\"add-btn\"\r\n                onClick={() => addToCart(item)}\r\n              >\r\n                Add to Cart\r\n              </button>\r\n              <button\r\n                className=\"remove-btn\"\r\n                onClick={() => removeItem(item.id)}\r\n              >\r\n                <img src={closeIcon} alt=\"Remove\" className=\"close-icon\" />\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Your cart is empty.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/Priyamvatha/Desktop/Gypsy/frontend/src/Pages/Cart.jsx"],"sourcesContent":["/*import React, { useContext } from 'react';\r\nimport { CartContext } from '../CartContext';\r\nimport './Cart.css';\r\nimport closeIcon from '../Components/Assets/close.png';\r\n\r\nconst Cart = () => {\r\n  const { cart, cartCount, removeItem } = useContext(CartContext);\r\n\r\n  const addToCart = async (item) => {\r\n    try {\r\n      // Get the token from localStorage\r\n      const authToken = localStorage.getItem('auth_token');\r\n\r\n      if (!authToken) {\r\n        console.error('No auth token found. Please log in.');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('http://localhost:4000/addtocart', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': authToken,\r\n        },\r\n        body: JSON.stringify({ item }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        console.log('Item added to cart:', data);\r\n        // Optionally update cart state/context here\r\n      } else {\r\n        console.error('Failed to add item:', data.errors || data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding item:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <h1>Shopping Cart</h1>\r\n      <h2>Total Items: {cartCount}</h2>\r\n\r\n      <div className=\"cart-items\">\r\n        {cart.length > 0 ? (\r\n          cart.map((item) => (\r\n            <div key={item.id} className=\"cart-item\">\r\n              <img\r\n                src={item.image}\r\n                alt={item.name}\r\n                className=\"cart-item-image\"\r\n              />\r\n              <div className=\"cart-item-details\">\r\n                <p className=\"cart-item-name\">{item.name}</p>\r\n                <p className=\"cart-item-price\">Price: ${item.new_price}</p>\r\n              </div>\r\n              <button\r\n                className=\"add-btn\"\r\n                onClick={() => addToCart(item)}\r\n              >\r\n                Add to Cart\r\n              </button>\r\n              <button\r\n                className=\"remove-btn\"\r\n                onClick={() => removeItem(item.id)}\r\n              >\r\n                <img src={closeIcon} alt=\"Remove\" className=\"close-icon\" />\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Your cart is empty.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n*/\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}