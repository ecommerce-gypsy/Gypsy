{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Priyamvatha\\\\Desktop\\\\Gypsy\\\\frontend\\\\src\\\\Pages\\\\LoginSignup.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\r\nimport './LoginSignup.css';\r\n\r\nexport const LoginSignup = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const toggleForm = () => setIsLogin(!isLogin);\r\n  const login = async()=>{\r\nconsole.log(\"Login function executed\");\r\n  }\r\n  const signup = async()=>{\r\n    console.log(\"Signup function executed\");\r\n  }\r\n//const [state,setState] = useState(\"Login\");\r\n  return (\r\n    <div className=\"login-signup-container\">\r\n      <div className=\"form-wrapper\">\r\n        <h2>{isLogin ? 'Login' : 'Sign Up'}</h2>\r\n        <form>\r\n          {!isLogin && (\r\n            <>\r\n              <label>Full Name</label>\r\n              <input type=\"text\" placeholder=\"Enter your name\" />\r\n            </>\r\n          )}\r\n          <label>Email</label>\r\n          <input type=\"email\" placeholder=\"Enter your email\" />\r\n          <label>Password</label>\r\n          <input type=\"password\" placeholder=\"Enter your password\" />\r\n          <button type=\"submit\">{isLogin ? 'Login' : 'Sign Up'}</button>\r\n        </form>\r\n        <p onClick={toggleForm} className=\"toggle-text\">\r\n          {isLogin\r\n            ? \"Don't have an account? Sign up\"\r\n            : 'Already have an account? Login'}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};*/\nimport React, { useState } from 'react';\nimport './LoginSignup.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LoginSignup = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true); // Tracks whether the form is in Login or Sign Up mode\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n\n  // Toggle between Login and Sign Up forms\n  const toggleForm = () => setIsLogin(!isLogin);\n\n  // Handle input changes\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  /*\r\n    // Login function\r\n    const login = async () => {\r\n      console.log('Login function executed with:', formData);\r\n      try {\r\n        // Send a POST request to the signup endpoint\r\n        const response = await fetch('http://localhost:4000/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                name: formData.name, // Ensure formData.name is populated\r\n                email: formData.email,\r\n                password: formData.password,\r\n            }),\r\n        });\r\n  \r\n        // Parse the response JSON\r\n        const data = await response.json();\r\n  \r\n        // Handle non-OK responses\r\n        if (!response.ok) {\r\n            // Check if the error is for an existing user\r\n            if (data.error === \"existing user found with same email address\") {\r\n                alert(\"A user with this email already exists. Please use a different email.\");\r\n            } else {\r\n                throw new Error(data.message || 'Signup failed');\r\n            }\r\n            return; // Exit the function if there's an error\r\n        }\r\n  \r\n        console.log('Signup successful:', data);\r\n  \r\n        // Store the auth token in local storage\r\n        localStorage.setItem('auth_token', data.token);\r\n  \r\n        // Redirect to the homepage\r\n        window.location.replace(\"/\");\r\n    } catch (error) {\r\n        console.error('Error during signup:', error.message || error);\r\n        alert(error.message || \"Something went wrong during signup. Please try again.\");\r\n    }\r\n      \r\n    };*/\n  // Login function\n  const login = async e => {\n    e.preventDefault(); // Prevent default form submission\n    console.log('Login function executed with:', formData);\n    try {\n      // Send a POST request to the login endpoint\n      const response = await fetch('http://localhost:4000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          password: formData.password\n        })\n      });\n\n      // Parse the response JSON\n      const data = await response.json();\n\n      // Handle non-OK responses\n      if (!response.ok) {\n        // Check if the error is for an existing user\n        if (data.message) {\n          alert(data.message); // Show the error message\n        } else {\n          throw new Error('Login failed');\n        }\n        return; // Exit the function if there's an error\n      }\n      console.log('Login successful:', data);\n\n      // Store the auth token in local storage\n      localStorage.setItem('auth_token', data.token);\n\n      // Optionally, you can also store cart data if returned\n      if (data.cartData) {\n        // Assuming you have a context or state to manage cart\n        // setCart(data.cartData); // Uncomment if using context\n      }\n\n      // Redirect to the homepage or dashboard\n      window.location.replace(\"/\");\n    } catch (error) {\n      console.error('Error during login:', error.message || error);\n      alert(error.message || \"Something went wrong during login. Please try again.\");\n    }\n  };\n\n  // Signup function\n  const signup = async () => {\n    try {\n      // Send a POST request to the signup endpoint\n      const response = await fetch('http://localhost:4000/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: formData.name,\n          // Ensure formData.name is populated\n          email: formData.email,\n          password: formData.password\n        })\n      });\n\n      // Parse the response JSON\n      const data = await response.json();\n\n      // Handle non-OK responses\n      if (!response.ok) {\n        // Check if the error is for an existing user\n        if (data.error === \"existing user found with same email address\") {\n          alert(\"A user with this email already exists. Please use a different email.\");\n        } else {\n          throw new Error(data.message || 'Signup failed');\n        }\n        return; // Exit the function if there's an error\n      }\n      console.log('Signup successful:', data);\n\n      // Store the auth token in local storage\n      localStorage.setItem('auth_token', data.token);\n\n      // Redirect to the homepage\n      window.location.replace(\"/\");\n    } catch (error) {\n      console.error('Error during signup:', error.message || error);\n      alert(error.message || \"Something went wrong during signup. Please try again.\");\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent the page from reloading\n    if (!isLogin && !formData.name) {\n      alert('Please enter your name for signup!');\n      return;\n    }\n    if (!formData.email || !formData.password) {\n      alert('Please fill all the fields!');\n      return;\n    }\n    if (isLogin) {\n      login(); // Call the login function\n    } else {\n      signup(); // Call the signup function\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-signup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [!isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Enter your name\",\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter your email\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter your password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isLogin ? 'Login' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: toggleForm,\n        className: \"toggle-text\",\n        children: isLogin ? \"Don't have an account? Sign up\" : 'Already have an account? Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginSignup, \"QdNtLr19DzbFUzQrH+KK1WMp1GE=\");\n_c = LoginSignup;\nvar _c;\n$RefreshReg$(_c, \"LoginSignup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginSignup","_s","isLogin","setIsLogin","formData","setFormData","name","email","password","toggleForm","handleChange","e","target","value","login","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","alert","Error","localStorage","setItem","token","cartData","window","location","replace","error","signup","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Priyamvatha/Desktop/Gypsy/frontend/src/Pages/LoginSignup.jsx"],"sourcesContent":["/*import React, { useState } from 'react';\r\nimport './LoginSignup.css';\r\n\r\nexport const LoginSignup = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const toggleForm = () => setIsLogin(!isLogin);\r\n  const login = async()=>{\r\nconsole.log(\"Login function executed\");\r\n  }\r\n  const signup = async()=>{\r\n    console.log(\"Signup function executed\");\r\n  }\r\n//const [state,setState] = useState(\"Login\");\r\n  return (\r\n    <div className=\"login-signup-container\">\r\n      <div className=\"form-wrapper\">\r\n        <h2>{isLogin ? 'Login' : 'Sign Up'}</h2>\r\n        <form>\r\n          {!isLogin && (\r\n            <>\r\n              <label>Full Name</label>\r\n              <input type=\"text\" placeholder=\"Enter your name\" />\r\n            </>\r\n          )}\r\n          <label>Email</label>\r\n          <input type=\"email\" placeholder=\"Enter your email\" />\r\n          <label>Password</label>\r\n          <input type=\"password\" placeholder=\"Enter your password\" />\r\n          <button type=\"submit\">{isLogin ? 'Login' : 'Sign Up'}</button>\r\n        </form>\r\n        <p onClick={toggleForm} className=\"toggle-text\">\r\n          {isLogin\r\n            ? \"Don't have an account? Sign up\"\r\n            : 'Already have an account? Login'}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};*/\r\nimport React, { useState } from 'react';\r\nimport './LoginSignup.css';\r\n\r\nexport const LoginSignup = () => {\r\n  const [isLogin, setIsLogin] = useState(true); // Tracks whether the form is in Login or Sign Up mode\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n\r\n  // Toggle between Login and Sign Up forms\r\n  const toggleForm = () => setIsLogin(!isLogin);\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n/*\r\n  // Login function\r\n  const login = async () => {\r\n    console.log('Login function executed with:', formData);\r\n    try {\r\n      // Send a POST request to the signup endpoint\r\n      const response = await fetch('http://localhost:4000/login', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n              name: formData.name, // Ensure formData.name is populated\r\n              email: formData.email,\r\n              password: formData.password,\r\n          }),\r\n      });\r\n\r\n      // Parse the response JSON\r\n      const data = await response.json();\r\n\r\n      // Handle non-OK responses\r\n      if (!response.ok) {\r\n          // Check if the error is for an existing user\r\n          if (data.error === \"existing user found with same email address\") {\r\n              alert(\"A user with this email already exists. Please use a different email.\");\r\n          } else {\r\n              throw new Error(data.message || 'Signup failed');\r\n          }\r\n          return; // Exit the function if there's an error\r\n      }\r\n\r\n      console.log('Signup successful:', data);\r\n\r\n      // Store the auth token in local storage\r\n      localStorage.setItem('auth_token', data.token);\r\n\r\n      // Redirect to the homepage\r\n      window.location.replace(\"/\");\r\n  } catch (error) {\r\n      console.error('Error during signup:', error.message || error);\r\n      alert(error.message || \"Something went wrong during signup. Please try again.\");\r\n  }\r\n    \r\n  };*/\r\n      // Login function\r\n      const login = async (e) => {\r\n        e.preventDefault(); // Prevent default form submission\r\n        console.log('Login function executed with:', formData);\r\n        try {\r\n            // Send a POST request to the login endpoint\r\n            const response = await fetch('http://localhost:4000/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    email: formData.email,\r\n                    password: formData.password,\r\n                }),\r\n            });\r\n\r\n            // Parse the response JSON\r\n            const data = await response.json();\r\n\r\n            // Handle non-OK responses\r\n            if (!response.ok) {\r\n                // Check if the error is for an existing user\r\n                if (data.message) {\r\n                    alert(data.message); // Show the error message\r\n                } else {\r\n                    throw new Error('Login failed');\r\n                }\r\n                return; // Exit the function if there's an error\r\n            }\r\n\r\n            console.log('Login successful:', data);\r\n\r\n            // Store the auth token in local storage\r\n            localStorage.setItem('auth_token', data.token);\r\n\r\n            // Optionally, you can also store cart data if returned\r\n            if (data.cartData) {\r\n                // Assuming you have a context or state to manage cart\r\n                // setCart(data.cartData); // Uncomment if using context\r\n            }\r\n\r\n            // Redirect to the homepage or dashboard\r\n            window.location.replace(\"/\");\r\n        } catch (error) {\r\n            console.error('Error during login:', error.message || error);\r\n            alert(error.message || \"Something went wrong during login. Please try again.\");\r\n        }\r\n    };\r\n\r\n // Signup function\r\n const signup = async () => {\r\n  try {\r\n      // Send a POST request to the signup endpoint\r\n      const response = await fetch('http://localhost:4000/signup', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n              name: formData.name, // Ensure formData.name is populated\r\n              email: formData.email,\r\n              password: formData.password,\r\n          }),\r\n      });\r\n\r\n      // Parse the response JSON\r\n      const data = await response.json();\r\n\r\n      // Handle non-OK responses\r\n      if (!response.ok) {\r\n          // Check if the error is for an existing user\r\n          if (data.error === \"existing user found with same email address\") {\r\n              alert(\"A user with this email already exists. Please use a different email.\");\r\n          } else {\r\n              throw new Error(data.message || 'Signup failed');\r\n          }\r\n          return; // Exit the function if there's an error\r\n      }\r\n\r\n      console.log('Signup successful:', data);\r\n\r\n      // Store the auth token in local storage\r\n      localStorage.setItem('auth_token', data.token);\r\n\r\n      // Redirect to the homepage\r\n      window.location.replace(\"/\");\r\n  } catch (error) {\r\n      console.error('Error during signup:', error.message || error);\r\n      alert(error.message || \"Something went wrong during signup. Please try again.\");\r\n  }\r\n};\r\n\r\n\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent the page from reloading\r\n    if (!isLogin && !formData.name) {\r\n      alert('Please enter your name for signup!');\r\n      return;\r\n    }\r\n    if (!formData.email || !formData.password) {\r\n      alert('Please fill all the fields!');\r\n      return;\r\n    }\r\n    if (isLogin) {\r\n      login(); // Call the login function\r\n    } else {\r\n      signup(); // Call the signup function\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-signup-container\">\r\n      <div className=\"form-wrapper\">\r\n        <h2>{isLogin ? 'Login' : 'Sign Up'}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          {!isLogin && (\r\n            <>\r\n              <label>Full Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter your name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n              />\r\n            </>\r\n          )}\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n          />\r\n          <button type=\"submit\">{isLogin ? 'Login' : 'Sign Up'}</button>\r\n        </form>\r\n        <p onClick={toggleForm} className=\"toggle-text\">\r\n          {isLogin\r\n            ? \"Don't have an account? Sign up\"\r\n            : 'Already have an account? Login'}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}