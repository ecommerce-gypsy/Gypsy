{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roshni\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import './App.css';\nimport { Navbar } from './Components/Navbar/Navbar';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'; // Correctly imported BrowserRouter\nimport { ShopCategory } from './Pages/ShopCategory';\nimport { LoginSignup } from './Pages/LoginSignup';\nimport { Cart } from './Pages/Cart';\nimport { Product } from './Pages/Product';\nimport { Shop } from './Pages/Shop';\n\nimport React, { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\n\nconst App = () => {\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchToSignup = () => setIsLogin(false);\n  const switchToLogin = () => setIsLogin(true);\n\n  return (\n    <div className=\"app-container\">\n      {isLogin ? (\n        <Login switchToSignup={switchToSignup} />\n      ) : (\n        <Signup switchToLogin={switchToLogin} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter> {/* Wrap the entire application \n        <Navbar />\n        <Routes>\n          <Route path='/' element={<Shop />} />\n          <Route path='/mens' element={<ShopCategory category=\"mens\" />} />\n          <Route path='/womens' element={<ShopCategory category=\"womens\" />} /> {/* Fixed typo here \n          <Route path='/kids' element={<ShopCategory category=\"kids\" />} />\n          <Route path='/product/:productId' element={<Product />} /> {/* Fixed product route \n          <Route path='/cart' element={<Cart />} />\n          <Route path='/login' element={<LoginSignup />} />\n      \n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;*/\n\nimport React, { useState } from \"react\";\nimport Login from \"./Components/Login\";\nimport Signup from \"./Components/Signup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n\n  // Handlers to toggle between Login and Signup\n  const switchToSignup = () => setIsLogin(false);\n  const switchToLogin = () => setIsLogin(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: isLogin ?\n    /*#__PURE__*/\n    // Render Login component if isLogin is true\n    _jsxDEV(Login, {\n      switchToSignup: switchToSignup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Render Signup component if isLogin is false\n    _jsxDEV(Signup, {\n      switchToLogin: switchToLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"juHMKC6x2j1wnRvCiB5VrABnZyE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Signup","jsxDEV","_jsxDEV","App","_s","isLogin","setIsLogin","switchToSignup","switchToLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Roshni/Desktop/ecommerce/frontend/src/App.js"],"sourcesContent":["/*import './App.css';\nimport { Navbar } from './Components/Navbar/Navbar';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'; // Correctly imported BrowserRouter\nimport { ShopCategory } from './Pages/ShopCategory';\nimport { LoginSignup } from './Pages/LoginSignup';\nimport { Cart } from './Pages/Cart';\nimport { Product } from './Pages/Product';\nimport { Shop } from './Pages/Shop';\n\nimport React, { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\n\nconst App = () => {\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchToSignup = () => setIsLogin(false);\n  const switchToLogin = () => setIsLogin(true);\n\n  return (\n    <div className=\"app-container\">\n      {isLogin ? (\n        <Login switchToSignup={switchToSignup} />\n      ) : (\n        <Signup switchToLogin={switchToLogin} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter> {/* Wrap the entire application \n        <Navbar />\n        <Routes>\n          <Route path='/' element={<Shop />} />\n          <Route path='/mens' element={<ShopCategory category=\"mens\" />} />\n          <Route path='/womens' element={<ShopCategory category=\"womens\" />} /> {/* Fixed typo here \n          <Route path='/kids' element={<ShopCategory category=\"kids\" />} />\n          <Route path='/product/:productId' element={<Product />} /> {/* Fixed product route \n          <Route path='/cart' element={<Cart />} />\n          <Route path='/login' element={<LoginSignup />} />\n      \n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;*/\n\n\nimport React, { useState } from \"react\";\nimport Login from \"./Components/Login\";\nimport Signup from \"./Components/Signup\";\n\nconst App = () => {\n  const [isLogin, setIsLogin] = useState(true);\n\n  // Handlers to toggle between Login and Signup\n  const switchToSignup = () => setIsLogin(false);\n  const switchToLogin = () => setIsLogin(true);\n\n  return (\n    <div className=\"app-container\">\n      {isLogin ? (\n        // Render Login component if isLogin is true\n        <Login switchToSignup={switchToSignup} />\n      ) : (\n        // Render Signup component if isLogin is false\n        <Signup switchToLogin={switchToLogin} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMS,cAAc,GAAGA,CAAA,KAAMD,UAAU,CAAC,KAAK,CAAC;EAC9C,MAAME,aAAa,GAAGA,CAAA,KAAMF,UAAU,CAAC,IAAI,CAAC;EAE5C,oBACEJ,OAAA;IAAKO,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3BL,OAAO;IAAA;IACN;IACAH,OAAA,CAACH,KAAK;MAACQ,cAAc,EAAEA;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAA;IAEzC;IACAZ,OAAA,CAACF,MAAM;MAACQ,aAAa,EAAEA;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACxC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACV,EAAA,CAlBID,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAoBT,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}