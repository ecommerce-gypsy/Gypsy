{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Priyamvatha\\\\Desktop\\\\Gypsy\\\\frontend\\\\src\\\\Pages\\\\Cart.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useContext } from 'react';\r\nimport { CartContext } from '../CartContext';\r\nimport './Cart.css';\r\nimport closeIcon from '../Components/Assets/close.png';\r\n\r\nconst Cart = () => {\r\n  const { cart, cartCount, removeItem } = useContext(CartContext);\r\n\r\n  const addToCart = async (item) => {\r\n    try {\r\n      // Get the token from localStorage\r\n      const authToken = localStorage.getItem('auth_token');\r\n\r\n      if (!authToken) {\r\n        console.error('No auth token found. Please log in.');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('http://localhost:4000/addtocart', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': authToken,\r\n        },\r\n        body: JSON.stringify({ item }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        console.log('Item added to cart:', data);\r\n        // Optionally update cart state/context here\r\n      } else {\r\n        console.error('Failed to add item:', data.errors || data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding item:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <h1>Shopping Cart</h1>\r\n      <h2>Total Items: {cartCount}</h2>\r\n\r\n      <div className=\"cart-items\">\r\n        {cart.length > 0 ? (\r\n          cart.map((item) => (\r\n            <div key={item.id} className=\"cart-item\">\r\n              <img\r\n                src={item.image}\r\n                alt={item.name}\r\n                className=\"cart-item-image\"\r\n              />\r\n              <div className=\"cart-item-details\">\r\n                <p className=\"cart-item-name\">{item.name}</p>\r\n                <p className=\"cart-item-price\">Price: ${item.new_price}</p>\r\n              </div>\r\n              <button\r\n                className=\"add-btn\"\r\n                onClick={() => addToCart(item)}\r\n              >\r\n                Add to Cart\r\n              </button>\r\n              <button\r\n                className=\"remove-btn\"\r\n                onClick={() => removeItem(item.id)}\r\n              >\r\n                <img src={closeIcon} alt=\"Remove\" className=\"close-icon\" />\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Your cart is empty.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n*/\nimport React, { useContext } from 'react';\nimport { CartContext } from '../CartContext';\nimport './Cart.css';\nimport closeIcon from '../Components/Assets/close.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const {\n    cart,\n    cartCount,\n    setCart\n  } = useContext(CartContext);\n  const authToken = localStorage.getItem('auth_token');\n  const addToCart = async item => {\n    try {\n      const response = await fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': authToken\n        },\n        body: JSON.stringify({\n          item\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setCart(prevCart => [...prevCart, data.item]);\n        console.log('Item added to cart:', data.item);\n      } else {\n        console.error('Failed to add item:', data.error);\n      }\n    } catch (error) {\n      console.error('Error adding item:', error);\n    }\n  };\n  const removeFromCart = async itemId => {\n    try {\n      const response = await fetch('http://localhost:4000/removefromcart', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': authToken\n        },\n        body: JSON.stringify({\n          itemId\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setCart(prevCart => prevCart.filter(item => item.id !== itemId));\n        console.log('Item removed from cart:', data);\n      } else {\n        console.error('Failed to remove item:', data.error);\n      }\n    } catch (error) {\n      console.error('Error removing item:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total Items: \", cartCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cart.length > 0 ? cart.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: item.name,\n          className: \"cart-item-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cart-item-name\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cart-item-price\",\n            children: [\"Price: $\", item.new_price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-btn\",\n          onClick: () => addToCart(item),\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-btn\",\n          onClick: () => removeFromCart(item.id),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: closeIcon,\n            alt: \"Remove\",\n            className: \"close-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your cart is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"mIjifrrsuncBWObes/l8+kWXQBU=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useContext","CartContext","closeIcon","jsxDEV","_jsxDEV","Cart","_s","cart","cartCount","setCart","authToken","localStorage","getItem","addToCart","item","response","fetch","method","headers","body","JSON","stringify","data","json","ok","prevCart","console","log","error","removeFromCart","itemId","filter","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","src","image","alt","name","new_price","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Priyamvatha/Desktop/Gypsy/frontend/src/Pages/Cart.jsx"],"sourcesContent":["/*import React, { useContext } from 'react';\r\nimport { CartContext } from '../CartContext';\r\nimport './Cart.css';\r\nimport closeIcon from '../Components/Assets/close.png';\r\n\r\nconst Cart = () => {\r\n  const { cart, cartCount, removeItem } = useContext(CartContext);\r\n\r\n  const addToCart = async (item) => {\r\n    try {\r\n      // Get the token from localStorage\r\n      const authToken = localStorage.getItem('auth_token');\r\n\r\n      if (!authToken) {\r\n        console.error('No auth token found. Please log in.');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('http://localhost:4000/addtocart', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': authToken,\r\n        },\r\n        body: JSON.stringify({ item }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        console.log('Item added to cart:', data);\r\n        // Optionally update cart state/context here\r\n      } else {\r\n        console.error('Failed to add item:', data.errors || data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding item:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <h1>Shopping Cart</h1>\r\n      <h2>Total Items: {cartCount}</h2>\r\n\r\n      <div className=\"cart-items\">\r\n        {cart.length > 0 ? (\r\n          cart.map((item) => (\r\n            <div key={item.id} className=\"cart-item\">\r\n              <img\r\n                src={item.image}\r\n                alt={item.name}\r\n                className=\"cart-item-image\"\r\n              />\r\n              <div className=\"cart-item-details\">\r\n                <p className=\"cart-item-name\">{item.name}</p>\r\n                <p className=\"cart-item-price\">Price: ${item.new_price}</p>\r\n              </div>\r\n              <button\r\n                className=\"add-btn\"\r\n                onClick={() => addToCart(item)}\r\n              >\r\n                Add to Cart\r\n              </button>\r\n              <button\r\n                className=\"remove-btn\"\r\n                onClick={() => removeItem(item.id)}\r\n              >\r\n                <img src={closeIcon} alt=\"Remove\" className=\"close-icon\" />\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Your cart is empty.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n*/\r\nimport React, { useContext } from 'react';\r\nimport { CartContext } from '../CartContext';\r\nimport './Cart.css';\r\nimport closeIcon from '../Components/Assets/close.png';\r\n\r\nconst Cart = () => {\r\n  const { cart, cartCount, setCart } = useContext(CartContext);\r\n\r\n  const authToken = localStorage.getItem('auth_token');\r\n\r\n  const addToCart = async (item) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/addtocart', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': authToken,\r\n        },\r\n        body: JSON.stringify({ item }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setCart((prevCart) => [...prevCart, data.item]);\r\n        console.log('Item added to cart:', data.item);\r\n      } else {\r\n        console.error('Failed to add item:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding item:', error);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (itemId) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/removefromcart', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': authToken,\r\n        },\r\n        body: JSON.stringify({ itemId }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setCart((prevCart) => prevCart.filter((item) => item.id !== itemId));\r\n        console.log('Item removed from cart:', data);\r\n      } else {\r\n        console.error('Failed to remove item:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error removing item:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <h1>Shopping Cart</h1>\r\n      <h2>Total Items: {cartCount}</h2>\r\n\r\n      <div className=\"cart-items\">\r\n        {cart.length > 0 ? (\r\n          cart.map((item) => (\r\n            <div key={item.id} className=\"cart-item\">\r\n              <img src={item.image} alt={item.name} className=\"cart-item-image\" />\r\n              <div className=\"cart-item-details\">\r\n                <p className=\"cart-item-name\">{item.name}</p>\r\n                <p className=\"cart-item-price\">Price: ${item.new_price}</p>\r\n              </div>\r\n              <button className=\"add-btn\" onClick={() => addToCart(item)}>\r\n                Add to Cart\r\n              </button>\r\n              <button className=\"remove-btn\" onClick={() => removeFromCart(item.id)}>\r\n                <img src={closeIcon} alt=\"Remove\" className=\"close-icon\" />\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Your cart is empty.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}